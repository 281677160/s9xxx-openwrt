#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt with lede
# Source code repository: https://github.com/coolsnowwolf/lede / Branch: master
#=====================================================================================

name: Build OpenWrt with lede

on:
  repository_dispatch:
  push:
    branches:
      - main
    paths:
      - 'router'
  
  workflow_dispatch:
    inputs:
      cpu:
        description: 'cpu优选'
        required: false
        default: '弃用E5'
        type: choice
        options:
          - '弃用E5'
          - '8370C'
          - '8272CL'
          - '8171M'
      openwrt_board:
        description: "Select Amlogic board"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - s905x3_s905d_s912
          - a311d
          - s922x
          - s922x-n2
          - s922x-reva
          - s905x3
          - s905x3-b
          - s905x2
          - s905x2-km3
          - s912
          - s912-m8s
          - s905d
          - s905d-ki
          - s905x
          - s905w
          - s905
          - s905l3a
          - s905l2
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.10.135_5.15.50"
        type: choice
        options:
          - 5.4.210_5.10.135_5.15.50
          - 5.4.210_5.10.135
          - 5.10.135_5.15.50
          - 5.15.50_6.0.1
          - 5.4.210
          - 5.10.135
          - 5.15.50
          - 6.0.1
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      openwrt_size:
        description: "Set the rootfs size(Unit: MiB)."
        required: false
        default: "960"

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: router-config/lede-master/feeds.conf.default
  CONFIG_FILE: router-config/lede-master/.config
  COME_BACK: router-config/lede-master/come-back
  DIY_P1_SH: router-config/lede-master/diy-part1.sh
  DIY_P2_SH: router-config/lede-master/diy-part2.sh
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get -qq update -y
          sudo -E apt-get -qq full-upgrade -y
          sudo -E apt-get -qq install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "${TZ}"
          sudo mkdir -p /workdir
          sudo chown ${USER}:${GROUPS} /workdir
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          echo "status=success" >> ${GITHUB_OUTPUT}
          
      - name: CPU检测
        run: |
          cd ${GITHUB_WORKSPACE}
          export cpu_model=`cat /proc/cpuinfo  |grep 'model name' |gawk -F : '{print $2}' | uniq -c  | sed 's/^ \+[0-9]\+ //g'`
          echo "当前CPU型号：${cpu_model}"
          if [[ -z "${{ github.event.inputs.cpu }}" ]]; then
            export cpu_selection="弃用E5"
          else
            export cpu_selection="${{ github.event.inputs.cpu }}"
          fi
          
          if [[ "${cpu_selection}" == "弃用E5" ]]; then
            if [[ `echo "${cpu_model}" |grep -c "E5"` -ge '1' ]]; then
              git clone -b main https://github.com/${{github.repository}}.git lede
              export yml_path="lede/.github/workflows/build-openwrt-with-lede.yml"
              export PATHS1="$(grep -Eo "\- '.*'" "${yml_path}" |sed 's/^[ ]*//g' |grep -v "^#" |awk 'NR==1')"
              export PATHS2="- '${COME_BACK}/start'"
              export Continue_selecting="1"
              if [[ -n ${TARGET1} ]] && [[ -n ${PATHS1} ]]; then
                sed -i "s?${PATHS1}?${PATHS2}?g" "${yml_path}"
              else
                echo "获取变量失败,请检查build-openwrt-with-lede.yml文件"
                exit 1
              fi
            fi
          else
            if [[ `echo "${cpu_model}" |grep -c "${cpu_selection}"` -eq '0' ]]; then
              git clone -b main https://github.com/${{github.repository}}.git lede
              export yml_path="lede/.github/workflows/build-openwrt-with-lede.yml"
              export TARGET1="$(grep -Eo "default: \".*\"" "${yml_path}" |awk 'NR==1' |sed 's/\"/\\&/g')"
              export TARGET2="default: \\\"${cpu_selection}\\\""
              export PATHS1="$(grep -Eo "\- '.*'" "${yml_path}" |sed 's/^[ ]*//g' |grep -v "^#" |awk 'NR==1')"
              export PATHS2="- '${COME_BACK}/start'"
              export Continue_selecting="1"
              if [[ -n ${TARGET1} ]] && [[ -n ${PATHS1} ]]; then
                sed -i "s?${TARGET1}?${TARGET2}?g" "${yml_path}"
                sed -i "s?${PATHS1}?${PATHS2}?g" "${yml_path}"
              else
                echo "获取变量失败,请检查build-openwrt-with-lede.yml文件"
                exit 1
              fi
            fi
          fi
          if [[ "Continue_selecting" == "1" ]]; then
            cd lede
            mkdir -p ${COME_BACK}
            echo "$(date +%Y%m%d%H%M%S)" > ${COME_BACK}/start
            git add .
            git commit -m "重新启动编译"
            git push --force "https://${{ secrets.REPO_TOKEN }}@github.com/${{github.repository}}" HEAD:main
            exit 1
          fi

      - name: Clone source code
        working-directory: /workdir
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          df -hT ${PWD}
          git clone --depth 1 ${REPO_URL} -b ${REPO_BRANCH} openwrt
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

      - name: Load custom feeds
        run: |
          [[ -e "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "build_tag=OpenWrt_Aml_lede_$(date +"%m.%d.%H%M")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile.outputs.build_tag }}
          artifacts: openwrt/bin/targets/*/*/*rootfs.tar.gz
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Clean up server space
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        run: |
          cd openwrt/
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}

      - name: Build OpenWrt firmware
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz
          openwrt_board: ${{ inputs.openwrt_board }}
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          openwrt_size: ${{ inputs.openwrt_size }}

      - name: Upload the packaged firmware to Release
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            This is OpenWrt firmware for Amlogic s9xxx tv box
            * Firmware information
            Default IP: 192.168.1.1
            Default username: root
            Default password: password
            Default WIFI name: OpenWrt
            Default WIFI password: none
            Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt

